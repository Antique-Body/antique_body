// This is your Prisma schema file
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  trainer
  client
  user
  admin
}

// Simple User model for authentication
model User {
  id                    String    @id @default(cuid())
  name                  String
  lastName              String?
  email                 String    @unique
  password              String?
  role                  UserRole?
  language              String    @default("en")
  emailVerified         Boolean   @default(false)
  emailVerificationToken String?
  resetToken            String?
  resetTokenExpiry      DateTime?
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  accounts              Account[]
  sessions              Session[]
  preferences           Json?     @default("{}")

  @@index([email])
  @@index([role])
  @@index([emailVerificationToken])
  @@index([resetToken])
}

// NextAuth models
model Account {
  id                 String    @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?   @db.Text
  access_token       String?   @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?   @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id            String    @id @default(cuid())
  sessionToken  String    @unique
  userId        String
  expires       DateTime
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model VerificationToken {
  identifier    String
  token         String    @unique
  expires       DateTime

  @@unique([identifier, token])
}